
export import "std/concepts.znn";

export embed {
#include <cmath>
}

export template <T> requires ordered<T>
T min(T a, T b) {
  if (a < b)
    return move(a);
  else
    return move(b);
}

export template <T> requires ordered<T>
T max(T a, T b) {
  if (a < b)
    return move(b);
  else
    return move(a);
}

export int as_int(double a) {
  embed_returns {
    return (int) a;
  }
}

export double as_double(int a) {
  embed_returns {
    return (double) a;
  }
}

export extern double sqrt(double value);
export extern double pow(double x, double y);
export extern int abs(int value);
