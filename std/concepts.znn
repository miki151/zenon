
export template <T>
concept copy {
  T copy(T*);
};

export template <T>
concept implicit_copy {
  T implicit_copy(T*);
};

export template <T>
concept ordered {
  bool operator < (T*, T*);
  bool operator > (T*, T*);
};

export template <T>
concept comparable {
  bool operator == (T*, T*);
};

export template <Fun, Ret, Args...>
concept invoke {
  Ret invoke(Fun*, Args...);
};

export template <T, Args...>
concept construct {
  T(Args...);
};

export template <T, A>
concept has_attribute {
  void builtin_has_attribute(T, A);
};

export template <T, Members...>
concept has_members {
  void builtin_has_members(T, Members...);
};

export template <T>
concept get_hash {
  int get_hash(T*);
};
