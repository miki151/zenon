export import "concepts.znn";

embed{
#include <cstdio>
}

export string to_string(int* i) {
  embed {
    char buf[12];
    snprintf(buf, 12, "%d", *i);
    return lite_str<>::owned(buf);
  }
}

export string to_string(double* i) {
  embed {
    char buf[20];
    snprintf(buf, 20, "%f", *i);
    return lite_str<>::owned(buf);
  }
}

export string to_string(string* s) {
  return *s;
}

export string to_string(bool* b) {
  if (*b)
    return "true";
  else
    return "false";
}

export template <T>
concept can_print {
  string to_string(T*);
};

export void print(string s) {
  embed {
    printf("%s", s.data());
  }
}
