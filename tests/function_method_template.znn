// 14

concept <T> CanAdd {
  T operator + (T* a, T* b);
};

template <T> requires CanAdd<T>
void increment(T mutable* a, T b) {
  *a = *a + b;
}

struct A {
  int v;
};

A operator + (A* a1, A* a2) {
  return A(a1^.v + a2^.v);
}

int main() {
  mutable x = 2;
  x.increment(3);
  mutable a = A(4);
  a.increment(.b = A(5));
  return x + a.v;
}
