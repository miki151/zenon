// no_compile

struct X { };

template <T>
int res() {
  return to_string(T).size();
}

void f(X, int) { }
void f(X, string) { }

concept <T, U> F {
  void f(T, U);
};

template <T, U> requires F<T, U>
int get() {
  return res<U>();
}

int main() {
  return get<X>();
}
