// 5

import "std/concepts.znn";

template <T>
struct X {
  T v;
};

template <T> requires copy<T>
X<T> copy(X<T>*) = default;

template<T> requires copy<T>
void set(X<T> mutable* x, T t) {
  x^.v = t.copy();
}

template <T>
T* get(X<T>* x) {
  return &x^.v;
}

int main() {
  mutable x = X<int>(10);
  x.set(5);
  return *x.get();
}
