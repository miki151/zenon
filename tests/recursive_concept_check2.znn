// 3

import "std/concepts.znn";

concept <T> F1 {
  int f1(T);
};

concept <T> F2 {
  int f2(T mutable*);
};

template <A> requires F1<A>, copy<A>
int f2(mutable A mutable* a) {
  return 1 + f1(a^.copy());
}

template <A> requires F2<A>
int f1(mutable A a) {
  return 2;
}

int main() {
  mutable a = 5;
  return f2(&a);
}
