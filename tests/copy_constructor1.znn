// 3

import "std/concepts.znn";

struct S {
  int a;
};

S copy(S*) = default;

template <T> requires copy<T>
int f(T t) {
  T u = t.copy();
  return 1;
}

template <T>
int f3(T* t) {
  return 2;
}

template <T>
int f2(T t) {
  const ptr = &t;
  return f3(ptr);
}


int main() {
  S s = S(1);
  S s2 = s.copy();
  return f(s.copy()) + f2(s.copy());
}

