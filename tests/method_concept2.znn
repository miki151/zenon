// 6

concept<T, U> CanConvert {
  U convert(T* t);
};

struct S1 {
  int t;
};

template <U> requires CanConvert<U, int>
void set(S1 mutable* s, U u) {
  s->t = u.convert();
}

struct X {
  int a;
};

int convert(X* x) {
  return 1 + x->a;
}

int main() {
  mutable s1 = S1(1);
  s1.set(X(5));
  return s1.t;
}
