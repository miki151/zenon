// 1

struct A1 {
  string s;
};

string toString(A1* a) {
  return "A1(" + a->s + ")";
}

struct B {
};

string toString(B* b) {
  return "B";
}

concept <T> Printable {
  string toString(T* t);
};

template <A> requires Printable<A>
string print(A* a) {
  return a->toString();
}

int main() {
  const a = A1("pok");
  const b = B();
  if (print(&a) + print(&b) == "A1(pok)B")
    return 1;
  else
    return 0;
}
