// 7

concept<Fun, Ret, Args...> invoke2 {
  Ret invoke(Fun*, Args...);
  void destruct(Fun*);
};

template <T>
int get(invoke2<int, T> fun, T t) {
  return fun(move(t));
}

struct X {
  int mutable* cnt;
};

void destruct(X* x) {
  ++*x->cnt;
}

int main() {
  mutable res = 0;
  {
    const x = X(&res);
    const lam = [move(x)](string s) { return s.size(); };
    const invoke2<int, string> fun = move(lam);
    res += get(move(fun), "pokpok");
  }
  return res;
}
