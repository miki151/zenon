// 10

template <T>
struct S {
  T x;
};

concept <T> GetFun {
  T get();
};

template <T> requires GetFun<T>
S() {
  return S<T>::S(get());
}

template <T> requires GetFun<T>
T get_value() {
  const S<T> s = S<T>();
  return move(s).x;
}

int get() {
  return 5;
}

int main() {
  const s2 = S<int>();
  return get_value<int>() + s2.x;
}
