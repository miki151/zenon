// 2

int transform(bool* b) {
  if (*b)
    return 2;
  else
    return 1;
}

concept <T, U> can_transform {
  U transform(T);
};

template <T, U> requires can_transform<T*, U>
U transform(T t) {
  return transform(&t);
}

int main() {
  return transform<bool, int>(true);
}
